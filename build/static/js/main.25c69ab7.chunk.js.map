{"version":3,"sources":["redux/reducers/reportReducer.tsx","redux/reducers/rootReducer.tsx","redux/actionTypes/reportTypes.tsx","hooks/useFormControl.tsx","pages/form.tsx","components/department.tsx","pages/mainPage.tsx","pages/policy.tsx","pages/summary.tsx","config/routes.tsx","redux/actions/reportActions.tsx","redux/sagas/reportSaga/reportSaga.tsx","config/constants.tsx","redux/sagas/rootSaga.tsx","redux/store.tsx","components/bottomNav.tsx","components/clock.tsx","components/myStepper.tsx","components/header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initState","loading","error","exampleMessages","department","form","dark","routesAvailable","index","path","reportReducer","state","action","type","newState","isAlready","findIndex","elem","routeIndex","concat","rootReducer","combineReducers","report","reportFetchRequest","useFormControls","appDispatcher","useDispatch","useState","fullName","email","message","formSubmitted","success","values","setValues","errors","setErrors","formIsValid","fieldValues","isValid","trim","split","length","Object","every","x","handleInputValue","e","target","name","value","temp","test","validate","handleFormSubmit","preventDefault","isTimeGood","readyFormElem","submitFormAC","unblockRouteIndexByIdAC","alert","Date","getSeconds","inputFieldValues","label","id","multiline","rows","Form","appState","useSelector","getDefaultValue","variableName","join","onSubmit","map","inputFieldValue","TextField","defaultValue","fullWidth","onBlur","onChange","autoComplete","helperText","Button","variant","color","disabled","useStyles","makeStyles","card","width","maxHeight","textAlign","chosenCard","backgroundColor","green","Department","choose","chosen","classes","console","log","Card","className","CardActionArea","onClick","CardContent","Typography","gutterBottom","component","city","country","root","display","chosenElement","MainPage","styles","useEffect","reportFetchRequestAC","Paper","departmentItem","iter","chooseDepartmentAC","Policy","elevation","Array","_","loremIpsum","paper","routes","key","title","protected","informations","characteristic","content","information","size","routeIndexes","route","getCurrentIndex","indexPath","indexPathElem","reportFetchFailureAC","payload","fetchMessages","reportsSaga","getMessages","axios","get","call","response","put","messages","data","all","takeLatest","rootSaga","fork","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","run","position","bottom","zIndex","withRouter","history","React","setValue","BottomNavigation","newValue","showLabels","BottomNavigationAction","push","icon","fontSize","availableIndexes","routeAvailable","prevIndex","location","pathname","includes","nextIndex","style","marginLeft","marginTop","cursor","window","open","NightSwitch","darkTheme","setDarkTheme","FormControlLabel","checked","control","Switch","labelPlacement","flexDirection","alignItems","clock","Clock","toLocaleTimeString","time","setTime","timeIntervalClear","setInterval","clearInterval","marginRight","toLocaleDateString","theme","createStyles","top","button","spacing","completed","instructions","marginBottom","getStepContent","step","steps","handleStep","Stepper","nonLinear","activeStep","Step","expanded","StepButton","navbar","Header","EmptyComponent","App","createTheme","palette","lightTheme","ThemeProvider","height","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25c69ab7.chunk.js","sourcesContent":["import { IReportState, IReportFetchAction, IResetStateAction, IChooseDepartmentAction, ISubmitFormAction, IChangeThemeAction, IUnblockRouteIndexAction } from \"../types/types\"\r\n\r\nconst initState: IReportState = {\r\n  loading: false,\r\n  error: null,\r\n  exampleMessages: [],\r\n  department: null,\r\n  form: null,\r\n  dark: false,\r\n  routesAvailable: [{ index: 0, path: \"/\" }],\r\n}\r\ntype supportedActions = IReportFetchAction | IResetStateAction | IChooseDepartmentAction | ISubmitFormAction | IChangeThemeAction | IUnblockRouteIndexAction\r\nconst reportReducer = (state = initState, action: supportedActions): IReportState => {\r\n  switch (action.type) {\r\n    case \"reportFetchRequest\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case \"reportFetchFailure\":\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        loading: false,\r\n      }\r\n    case \"reportFetchSuccess\":\r\n      return {\r\n        ...state,\r\n        error: null,\r\n        exampleMessages: action.exampleMessages,\r\n        loading: false,\r\n      }\r\n    case \"reset\":\r\n      return {\r\n        ...initState,\r\n      }\r\n    case \"chooseDepartment\":\r\n      return {\r\n        ...state,\r\n        department: action.department,\r\n      }\r\n    case \"submitForm\":\r\n      return {\r\n        ...state,\r\n        form: action.form,\r\n      }\r\n    case \"changeTheme\":\r\n      return {\r\n        ...state,\r\n        dark: action.dark,\r\n      }\r\n    case \"unblockRouteIndex\": {\r\n      let newState = state\r\n      const isAlready: boolean = newState.routesAvailable.findIndex((elem) => elem.index === action.routeIndex.index && elem.path === action.routeIndex.path) !== -1\r\n      if (isAlready) {\r\n        return { ...state }\r\n      } else {\r\n        return {\r\n          ...state,\r\n          routesAvailable: state.routesAvailable.concat(action.routeIndex),\r\n        }\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default reportReducer\r\n","import { combineReducers } from \"redux\"\r\nimport reportReducer from \"./reportReducer\"\r\n\r\nconst rootReducer = combineReducers({\r\n  report: reportReducer,\r\n})\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>\r\n\r\nexport default rootReducer\r\n","import { reportFetchRequestType, reportFetchSuccessType, reportFetchFailureType } from \"../types/types\"\r\n\r\n//action.types' values\r\nexport const reportFetchRequest: reportFetchRequestType = \"reportFetchRequest\"\r\nexport const reportFetchSuccess: reportFetchSuccessType = \"reportFetchSuccess\"\r\nexport const reportFetchFailure: reportFetchFailureType = \"reportFetchFailure\"\r\n","import { useState } from \"react\"\r\nimport IForm from \"../model/IForm\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { submitFormAC, unblockRouteIndexByIdAC } from \"../redux/actions/reportActions\"\r\n\r\ntype FormExtension = {\r\n  formSubmitted: boolean\r\n  success: boolean\r\n}\r\nexport const useFormControls = () => {\r\n  const initialFormValues: IForm & FormExtension = {\r\n    fullName: \"\",\r\n    email: \"\",\r\n    message: \"\",\r\n    formSubmitted: false,\r\n    success: false,\r\n  }\r\n\r\n  const appDispatcher = useDispatch()\r\n  const [values, setValues] = useState(initialFormValues)\r\n  // let [populatedWithRandomApiText, setPopulatedWithRandomApiText] = useState(false)\r\n\r\n  const [errors, setErrors] = useState({} as any)\r\n  const validate: any = (fieldValues = values) => {\r\n    let temp: any = { ...errors }\r\n\r\n    if (\"fullName\" in fieldValues)\r\n      temp.fullName =\r\n        // fieldValues.fullName && fieldValues.fullName.split(\" \").length > 1 && !RegExp(/g[A-Za-z]/).test(fieldValues.fullName) ? \"\" : \"This field is required and has to be made of at least two words\"\r\n        fieldValues.fullName && fieldValues.fullName.split(\" \").length > 1 ? \"\" : \"This field is required and has to be made of at least two words\"\r\n\r\n    if (\"email\" in fieldValues) {\r\n      temp.email = fieldValues.email ? \"\" : \"This field is  required.\"\r\n      if (fieldValues.email) temp.email = /^[^@\\s]+@[^@\\s]+\\.[^@\\s]+$/.test(fieldValues.email) ? \"\" : \"Email is not valid.\"\r\n    }\r\n\r\n    if (\"message\" in fieldValues)\r\n      temp.message =\r\n        fieldValues.message.trim().length > 1 && fieldValues.message.length < 5000 ? `` : `This field is required and cannot be longer than 5000 characters(${fieldValues.message.length}/5000)`\r\n\r\n    setErrors({\r\n      ...temp,\r\n    })\r\n  }\r\n  const handleInputValue = (e: any) => {\r\n    const { name, value } = e.target\r\n\r\n    setValues({\r\n      ...values,\r\n      [name]: value,\r\n    })\r\n    validate({ [name]: value })\r\n  }\r\n  const handleFormSubmit = (e: any) => {\r\n    e.preventDefault()\r\n    if (!isTimeGood()) {\r\n      //to trzeba dac w inne miejsce\r\n      alert(\"Jesli sekundnik pokazuje liczbe w przedzial [10...19] lub [30...39] lub [50...59], niestety nie mozna kontynuowac. Proszę patrzeć uważnie na zegar na górze ekranu!\")\r\n      return\r\n    }\r\n    if (formIsValid()) {\r\n      const readyFormElem: IForm = { email: values.email, fullName: values.fullName, message: values.message }\r\n      appDispatcher(submitFormAC(readyFormElem))\r\n      appDispatcher(unblockRouteIndexByIdAC(2))\r\n    }\r\n  }\r\n  const formIsValid = (fieldValues = values) => {\r\n    const isValid = fieldValues.fullName && fieldValues.email && fieldValues.fullName.trim().split(\" \").length === 2 && fieldValues.message && Object.values(errors).every((x) => x === \"\")\r\n\r\n    return isValid\r\n  }\r\n  return {\r\n    handleInputValue,\r\n    handleFormSubmit,\r\n    formIsValid,\r\n    errors,\r\n  }\r\n}\r\n\r\nconst isTimeGood = (): boolean => {\r\n  const seconds = new Date().getSeconds()\r\n  return (seconds + 10) % 20 >= 10\r\n}\r\n","import { Button, TextField } from \"@material-ui/core\"\r\nimport { FC, ReactElement } from \"react\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { useFormControls } from \"../hooks/useFormControl\"\r\nimport { RootState } from \"../redux/reducers/rootReducer\"\r\n\r\nconst inputFieldValues = [\r\n  {\r\n    name: \"fullName\",\r\n    label: \"Imię i nazwisko\",\r\n    id: \"my-name\",\r\n  },\r\n  {\r\n    name: \"email\",\r\n    label: \"Email\",\r\n    id: \"my-email\",\r\n  },\r\n  {\r\n    name: \"message\",\r\n    label: \"Wiadomość\",\r\n    id: \"my-message\",\r\n    multiline: true,\r\n    rows: 30,\r\n  },\r\n]\r\nconst Form: FC<any> = (): ReactElement => {\r\n  const appState = useSelector((state: RootState) => state.report) //potrzegbne w ogole?\r\n\r\n  const { handleInputValue, handleFormSubmit, formIsValid, errors } = useFormControls()\r\n  type formVariable = \"message\" | \"fullName\" | \"email\"\r\n  const getDefaultValue = (variableName: formVariable): string => {\r\n    switch (variableName) {\r\n      case \"message\":\r\n        return appState?.form?.message || appState?.exampleMessages.join(\"\\n\")\r\n      case \"email\":\r\n        return appState?.form?.email || \"\"\r\n      case \"fullName\":\r\n        return appState?.form?.fullName || \"\"\r\n      default:\r\n        return \"\"\r\n    }\r\n  }\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      {inputFieldValues.map((inputFieldValue, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <TextField\r\n              defaultValue={getDefaultValue(inputFieldValue.name as formVariable)}\r\n              fullWidth\r\n              key={index}\r\n              onBlur={handleInputValue}\r\n              onChange={handleInputValue}\r\n              name={inputFieldValue.name}\r\n              label={inputFieldValue.label}\r\n              multiline={inputFieldValue.multiline ?? false}\r\n              rows={inputFieldValue.rows ?? 1}\r\n              autoComplete=\"none\"\r\n              {...(errors[inputFieldValue.name] && { error: true, helperText: errors[inputFieldValue.name] })}\r\n            />\r\n          </div>\r\n        )\r\n      })}\r\n      {appState?.form?.fullName ? (\r\n        <Button type=\"submit\" variant=\"contained\" color=\"secondary\" fullWidth disabled={!formIsValid()}>\r\n          Aktualizuj\r\n        </Button>\r\n      ) : (\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth disabled={!formIsValid()}>\r\n          Wyślij\r\n        </Button>\r\n      )}\r\n    </form>\r\n  )\r\n}\r\nexport default Form\r\n","import { ReactElement, FC } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Card from \"@material-ui/core/Card\"\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\"\r\nimport CardContent from \"@material-ui/core/CardContent\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport { green } from \"@material-ui/core/colors\"\r\nimport IDepartmentInfo from \"../model/IDepartment\"\r\nconst useStyles = makeStyles({\r\n  card: {\r\n    width: \"100%\",\r\n    maxHeight: \"100%\",\r\n    textAlign: \"center\",\r\n  },\r\n  chosenCard: {\r\n    width: \"100%\",\r\n    maxHeight: \"100%\",\r\n    backgroundColor: green[200],\r\n    textAlign: \"center\",\r\n  },\r\n})\r\ntype withDepartment = {\r\n  department: IDepartmentInfo\r\n}\r\ntype choosable = {\r\n  choose: (event: React.MouseEvent<any>) => void\r\n  chosen?: boolean\r\n}\r\ntype DepartmentProps = withDepartment & choosable\r\n\r\nconst Department: FC<DepartmentProps> = ({ department, choose, chosen }): ReactElement => {\r\n  const classes = useStyles()\r\n  console.log(department)\r\n  return (\r\n    <Card className={chosen ? classes.chosenCard : classes.card}>\r\n      <CardActionArea onClick={choose}>\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h1\" component=\"h2\">\r\n            {department.name}\r\n          </Typography>\r\n          <Typography variant=\"h3\" color=\"textSecondary\" component=\"span\">\r\n            {department.city}\r\n          </Typography>\r\n          <Typography variant=\"h4\" color=\"textSecondary\" component=\"div\">\r\n            {department.country}\r\n          </Typography>\r\n        </CardContent>\r\n      </CardActionArea>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default Department\r\n","import { useEffect, FC, ReactElement } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Paper, makeStyles } from \"@material-ui/core\"\r\n\r\nimport Department from \"../components/department\"\r\nimport IDepartmentInfo from \"../model/IDepartment\"\r\nimport { chooseDepartmentAC, reportFetchRequestAC, unblockRouteIndexByIdAC } from \"../redux/actions/reportActions\"\r\nimport { RootState } from \"../redux/reducers/rootReducer\"\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    display: \"grid\",\r\n  },\r\n  chosenElement: {\r\n    backgroundColor: \"secondary\",\r\n  },\r\n})\r\n\r\nconst MainPage: FC<any> = (): ReactElement => {\r\n  const styles = useStyles()\r\n  const appState = useSelector((state: RootState) => state.report)\r\n  const appDispatcher = useDispatch()\r\n  useEffect(() => {\r\n    appDispatcher(reportFetchRequestAC())\r\n    appDispatcher(unblockRouteIndexByIdAC(0))\r\n    appDispatcher(unblockRouteIndexByIdAC(3))\r\n\r\n    // console.log(routeIndexes)\r\n  }, [appDispatcher])\r\n\r\n  useEffect(() => {}, [appState.department])\r\n  const myDepartments: Array<IDepartmentInfo> = [\r\n    { name: \"XYZ\", city: \"Warszawa\", country: \"Poland\" },\r\n    { name: \"ABC\", city: \"Kraków\", country: \"Poland\" },\r\n    { name: \"RNQ\", city: \"Berlin\", country: \"Germany\" },\r\n  ]\r\n  return (\r\n    <Paper className={styles.chosenElement}>\r\n      <div className={styles.root}>\r\n        {myDepartments.map((departmentItem, iter) => (\r\n          <div key={iter}>\r\n            <Department\r\n              choose={() => {\r\n                appDispatcher(chooseDepartmentAC(departmentItem))\r\n                appDispatcher(unblockRouteIndexByIdAC(1))\r\n              }}\r\n              chosen={appState?.department?.name === departmentItem.name}\r\n              department={{ name: departmentItem.name, city: departmentItem.city, country: departmentItem.country }}\r\n            />\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default MainPage\r\n","import { Card } from \"@material-ui/core\"\r\nimport { FC, ReactElement } from \"react\"\r\nconst Policy: FC<any> = (): ReactElement => {\r\n  return (\r\n    <div>\r\n      <Card elevation={12}>{[...new Array(20)].map((_) => loremIpsum).join(\"\\n\\n\\n\\n\")}</Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Policy\r\nconst loremIpsum = `\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\"`\r\n","import { ReactElement, FC } from \"react\"\r\nimport { makeStyles, TextField } from \"@material-ui/core\"\r\nimport { useSelector } from \"react-redux\"\r\nimport { RootState } from \"../redux/reducers/rootReducer\"\r\n\r\nconst useStyles = makeStyles({\r\n  paper: {\r\n    backgroundColor: \"primary\",\r\n    color: \"black\",\r\n  },\r\n})\r\n\r\nconst Form: FC<any> = (): ReactElement => {\r\n  const appState = useSelector((state: RootState) => state.report)\r\n  const styles = useStyles()\r\n  interface info {\r\n    characteristic: string\r\n    content: string\r\n  }\r\n\r\n  const informations: Array<info | null> = [\r\n    { characteristic: \"Miasto oddziału\", content: appState?.department?.city! },\r\n    { characteristic: \"Państwo oddziału\", content: appState?.department?.country! },\r\n    { characteristic: \"Nazwa oddziału\", content: appState?.department?.name! },\r\n    { characteristic: \"Twój adres email\", content: appState?.form?.email! },\r\n    { characteristic: \"Twoja godność\", content: appState?.form?.fullName! },\r\n    { characteristic: \"Treść Twojego zgłoszenia\", content: appState?.form?.message! },\r\n  ]\r\n  return (\r\n    <form>\r\n      {informations.map((information, index) => {\r\n        return (\r\n          <>\r\n            <TextField\r\n              className={styles.paper}\r\n              disabled\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              defaultValue={`${information?.characteristic} : ${information?.content}`}\r\n              fullWidth\r\n              key={index}\r\n              multiline={index === informations.length - 1}\r\n              rows={index === informations.length - 1 ? 25 : 1}\r\n            />\r\n          </>\r\n        )\r\n      })}\r\n    </form>\r\n  )\r\n}\r\nexport default Form\r\n","//import all of the pages components:\r\nimport Form from \"../pages/form\"\r\nimport MainPage from \"../pages/mainPage\"\r\nimport Policy from \"../pages/policy\"\r\nimport Summary from \"../pages/summary\"\r\n\r\nimport IRoute from \"../model/IRoute\"\r\nimport IRouteIndex from \"../model/IRouteIndex\"\r\n\r\nconst routes: Array<IRoute> = [\r\n  {\r\n    key: \"route-main-page\",\r\n    title: \"Main Page\",\r\n    path: \"/\",\r\n    component: MainPage,\r\n    protected: false,\r\n  },\r\n  {\r\n    key: \"route-form\",\r\n    title: \"Form\",\r\n    path: \"/form\",\r\n    component: Form,\r\n    protected: true,\r\n  },\r\n  {\r\n    key: \"route-summary\",\r\n    title: \"Summary\",\r\n    path: \"/summary\",\r\n    component: Summary,\r\n    protected: false,\r\n  },\r\n  {\r\n    key: \"route-policy\",\r\n    title: \"Policy\",\r\n    path: \"/policy\",\r\n    component: Policy,\r\n    protected: false,\r\n  },\r\n]\r\nconst routeIndexes: typeof IRouteIndex = routes.map((route, index) => ({ path: route.path, index: index }))\r\n\r\nconst getCurrentIndex = (path: string) => {\r\n  const indexPath: number = routes.findIndex((indexPathElem) => indexPathElem.path === path)\r\n  return indexPath === -1 ? 0 : (indexPath as number)\r\n}\r\n\r\nexport { routes, routeIndexes, getCurrentIndex }\r\n","import IDepartmentInfo from \"../../model/IDepartment\"\r\nimport { IRouteIndex } from \"../../model/IRouteIndex\"\r\nimport { reportFetchRequest, reportFetchSuccess, reportFetchFailure } from \"../actionTypes/reportTypes\"\r\nimport {\r\n  IChangeThemeAction,\r\n  IReportFetchFailurePayload,\r\n  IReportFetchSuccessPayload,\r\n  IUnblockRouteIndexAction,\r\n  unblockRouteIndexType,\r\n  IReportFetchRequestAction,\r\n  IReportFetchSuccessAction,\r\n  IReportFetchFailureAction,\r\n  IChooseDepartmentAction,\r\n  ISubmitFormAction,\r\n} from \"../types/types\"\r\n\r\nimport IForm from \"../../model/IForm\"\r\nimport { routeIndexes } from \"../../config/routes\"\r\n\r\nexport const reportFetchRequestAC = (): IReportFetchRequestAction => ({\r\n  type: reportFetchRequest,\r\n})\r\n\r\nexport const reportFetchSuccessAC = (payload: IReportFetchSuccessPayload): IReportFetchSuccessAction => ({\r\n  type: reportFetchSuccess,\r\n  exampleMessages: payload.messages,\r\n})\r\n\r\nexport const reportFetchFailureAC = (payload: IReportFetchFailurePayload): IReportFetchFailureAction => ({\r\n  type: reportFetchFailure,\r\n  error: payload.error,\r\n})\r\n\r\n/////KONIEC SAGI NARESZCIE\r\n\r\nexport const chooseDepartmentAC = (department: IDepartmentInfo): IChooseDepartmentAction => ({\r\n  type: \"chooseDepartment\",\r\n  department,\r\n})\r\n\r\nexport const submitFormAC = (form: IForm): ISubmitFormAction => ({\r\n  type: \"submitForm\",\r\n  form,\r\n})\r\n\r\nexport const changeThemeAC = (dark: boolean): IChangeThemeAction => ({\r\n  type: \"changeTheme\",\r\n  dark,\r\n})\r\n\r\nexport const unblockRouteIndexAC = (routeIndex: IRouteIndex): IUnblockRouteIndexAction => ({\r\n  type: \"unblockRouteIndex\",\r\n  routeIndex,\r\n})\r\nexport const unblockRouteIndexByIdAC = (id: 0 | 1 | 2 | 3): IUnblockRouteIndexAction => {\r\n  const type: unblockRouteIndexType = \"unblockRouteIndex\"\r\n  if (id === 0 || id === 1 || id === 2 || id === 3) {\r\n    return { type, routeIndex: routeIndexes[id] }\r\n  } else {\r\n    return {\r\n      type,\r\n      routeIndex: routeIndexes[0],\r\n    }\r\n  }\r\n}\r\n","import axios from \"axios\"\r\nimport { all, call, put, takeLatest } from \"redux-saga/effects\"\r\n\r\nimport { reportFetchFailureAC, reportFetchSuccessAC } from \"../../actions/reportActions\"\r\nimport { reportFetchRequest } from \"../../actionTypes/reportTypes\"\r\n\r\nimport { apiUrl } from \"../../../config/constants\"\r\n\r\nconst getMessages = () => axios.get<string[]>(apiUrl)\r\n\r\nfunction* fetchMessages(): any {\r\n  try {\r\n    const response = yield call(getMessages)\r\n    yield put(reportFetchSuccessAC({ messages: response.data }))\r\n  } catch (e) {\r\n    yield put(reportFetchFailureAC({ error: e.message }))\r\n  }\r\n}\r\n\r\nfunction* reportsSaga() {\r\n  yield all([takeLatest(reportFetchRequest, fetchMessages)])\r\n}\r\nexport default reportsSaga\r\n","export const apiUrl = `https://baconipsum.com/api/?type=all-meat&paras=2`\r\nexport const maxLengthInput = 5000\r\n","import { all, fork } from \"@redux-saga/core/effects\"\r\nimport reportsSaga from \"./reportSaga/reportSaga\"\r\nexport function* rootSaga() {\r\n  yield all([fork(reportsSaga)])\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\"\r\nimport createSagaMiddleware from \"@redux-saga/core\"\r\nimport rootReducer from \"./reducers/rootReducer\"\r\nimport { rootSaga } from \"./sagas/rootSaga\"\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware))\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import { makeStyles } from \"@material-ui/core/styles\"\r\nimport { Switch, FormControlLabel, BottomNavigation, BottomNavigationAction } from \"@material-ui/core/\"\r\n\r\nimport Brightness4Icon from \"@material-ui/icons/Brightness4\"\r\nimport ArrowBackIosSharpIcon from \"@material-ui/icons/ArrowBackIosSharp\"\r\nimport ArrowForwardIosSharpIcon from \"@material-ui/icons/ArrowForwardIosSharp\"\r\nimport HomeSharpIcon from \"@material-ui/icons/HomeSharp\"\r\nimport PolicySharpIcon from \"@material-ui/icons/PolicySharp\"\r\nimport GitHubIcon from \"@material-ui/icons/GitHub\"\r\n\r\nimport React, { ReactElement, FC, useState } from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\n\r\nimport { RootState } from \"../redux/reducers/rootReducer\"\r\nimport { changeThemeAC } from \"../redux/actions/reportActions\"\r\nimport { IChangeThemeAction } from \"../redux/types/types\"\r\nimport { getCurrentIndex, routes } from \"../config/routes\"\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    position: \"sticky\",\r\n    bottom: 0,\r\n    zIndex: 10,\r\n  },\r\n})\r\ntype BottomNavProps = RouteComponentProps\r\n\r\nconst BottomNav: FC<BottomNavProps> = ({ history }): ReactElement => {\r\n  const classes = useStyles()\r\n  const [value, setValue] = React.useState(0)\r\n  const appState = useSelector((state: RootState) => state.report)\r\n\r\n  const handleForward = () => {\r\n    const availableIndexes = appState.routesAvailable.map((routeAvailable) => routeAvailable.index)\r\n\r\n    const currentIndex = getCurrentIndex(history.location.pathname)\r\n\r\n    let nextIndex = currentIndex\r\n\r\n    do {\r\n      nextIndex = (nextIndex + 1) % 4\r\n    } while (!availableIndexes.includes(nextIndex))\r\n    history.push(routes[nextIndex].path)\r\n  }\r\n  const handleBack = () => {\r\n    const availableIndexes = appState.routesAvailable.map((routeAvailable) => routeAvailable.index)\r\n\r\n    const currentIndex = getCurrentIndex(history.location.pathname)\r\n\r\n    let prevIndex = currentIndex\r\n\r\n    do {\r\n      if (prevIndex === 0) {\r\n        prevIndex = 3\r\n      } else {\r\n        prevIndex--\r\n      }\r\n    } while (!availableIndexes.includes(prevIndex))\r\n    console.log(prevIndex)\r\n    history.push(routes[prevIndex].path)\r\n  }\r\n  return (\r\n    <BottomNavigation\r\n      value={value}\r\n      onChange={(_, newValue) => {\r\n        setValue(newValue)\r\n      }}\r\n      showLabels\r\n      className={classes.root}\r\n    >\r\n      <BottomNavigationAction\r\n        label=\"Początek \"\r\n        onClick={() => {\r\n          history.push(\"/\")\r\n        }}\r\n        icon={<HomeSharpIcon fontSize=\"large\" />}\r\n      />\r\n      <BottomNavigationAction label=\"Wstecz\" icon={<ArrowBackIosSharpIcon onClick={handleBack} fontSize=\"large\" />} />\r\n      <BottomNavigationAction label=\"Dalej\" onClick={handleForward} icon={<ArrowForwardIosSharpIcon fontSize=\"large\" />} />\r\n      <BottomNavigationAction\r\n        label=\"Koniec\"\r\n        onClick={() => {\r\n          history.push(\"/policy\")\r\n        }}\r\n        icon={<PolicySharpIcon fontSize=\"large\" />}\r\n      />\r\n\r\n      <NightSwitch />\r\n\r\n      <GitHubIcon\r\n        style={{ marginLeft: \"15px\", marginTop: \"5px\", cursor: \"pointer\" }}\r\n        onClick={() => {\r\n          window.open(\"https://github.com/DJanocha/Kapus\")\r\n        }}\r\n        fontSize=\"large\"\r\n      />\r\n    </BottomNavigation>\r\n  )\r\n}\r\nexport default withRouter(BottomNav)\r\n\r\nconst NightSwitch: FC<any> = (): ReactElement => {\r\n  const appDispatcher = useDispatch()\r\n  const [darkTheme, setDarkTheme] = useState(false)\r\n  const darkTooggle = () => {\r\n    appDispatcher(changeThemeAC(!darkTheme) as IChangeThemeAction) //\r\n    setDarkTheme(!darkTheme)\r\n  }\r\n\r\n  return (\r\n    <FormControlLabel\r\n      value=\"top\"\r\n      onChange={darkTooggle}\r\n      checked={darkTheme}\r\n      style={{ color: \"green\" }}\r\n      control={<Switch style={{ color: \"blue\" }} icon={<Brightness4Icon />} color=\"primary\" />}\r\n      label={`tryb nocny`}\r\n      labelPlacement=\"bottom\"\r\n    />\r\n  )\r\n}\r\n","import { FC, ReactElement, useState, useEffect } from \"react\"\r\nimport WatchLaterIcon from \"@material-ui/icons/WatchLater\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    marginTop: \"-3rem\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    color: \"grey\",\r\n  },\r\n  clock: {\r\n    marginTop: \"-2rem\",\r\n  },\r\n})\r\nconst Clock: FC<{}> = (): ReactElement => {\r\n  const [time, setTime] = useState(new Date().toLocaleTimeString())\r\n\r\n  const styles = useStyles()\r\n  const tick = () => {\r\n    setTime(new Date().toLocaleTimeString())\r\n  }\r\n  useEffect(() => {\r\n    const timeIntervalClear = setInterval(() => {\r\n      tick()\r\n    }, 200)\r\n    return () => {\r\n      clearInterval(timeIntervalClear)\r\n    }\r\n  }, [])\r\n  return (\r\n    <span className={styles.root}>\r\n      <WatchLaterIcon fontSize=\"medium\" />\r\n      <span style={{ display: \"flex\", flexDirection: \"row\", marginRight: \"10px\" }}>\r\n        {new Date().toLocaleDateString()}\r\n        <br />\r\n        {time}\r\n      </span>\r\n    </span>\r\n  )\r\n}\r\n\r\nexport default Clock\r\n","import React, { ReactElement, FC } from \"react\"\r\nimport { makeStyles, Theme, createStyles } from \"@material-ui/core/styles\"\r\nimport { Step, Stepper, StepButton, Typography } from \"@material-ui/core\"\r\nimport { routes, getCurrentIndex } from \"../config/routes\"\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { useEffect } from \"react\"\r\nimport { RouteComponentProps } from \"react-router\"\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: \"100%\",\r\n      position: \"sticky\",\r\n      top: 0,\r\n      zIndex: 5,\r\n    },\r\n    button: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    completed: {\r\n      display: \"inline-block\",\r\n    },\r\n    instructions: {\r\n      marginTop: theme.spacing(1),\r\n      marginBottom: theme.spacing(1),\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n  })\r\n)\r\n\r\nfunction getSteps() {\r\n  return [\"Oddział\", \"Formularz\", \"Podsumowanie formularza\", \"Polityka prywatności\"]\r\n}\r\nfunction getRoutes() {\r\n  return routes.map((route) => route.path)\r\n}\r\n\r\nfunction getStepContent(step: number) {\r\n  switch (step) {\r\n    case 0:\r\n      return \"1: Gdzie chcesz złożyć zgłoszenie?\"\r\n    case 1:\r\n      return \"2: Prosimy o wypełnienie formularza\"\r\n    case 2:\r\n      return \"3: Zgłoszenie złożone pomyślnie. Oto szczegóły:\"\r\n    case 3:\r\n      return \"4: Prosimy o zapoznanie się z polityką prywatności.\"\r\n    default:\r\n      return \"Unknown step\"\r\n  }\r\n}\r\n\r\nconst MyStepper: FC<RouteComponentProps> = ({ history }): ReactElement => {\r\n  useEffect(() => {\r\n    console.log(history)\r\n  }, [history])\r\n  const classes = useStyles()\r\n  const steps = getSteps()\r\n\r\n  const handleStep = (step: number) => {\r\n    history.push(getRoutes()[step])\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper nonLinear activeStep={getCurrentIndex(history.location.pathname)}>\r\n        {steps.map((label, index) => (\r\n          <Step expanded key={label}>\r\n            <StepButton\r\n              disabled\r\n              color=\"secondary\"\r\n              onClick={() => {\r\n                handleStep(index)\r\n              }}\r\n            >\r\n              {label}\r\n            </StepButton>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div>\r\n        <Typography className={classes.instructions}>{getStepContent(getCurrentIndex(history.location.pathname))}</Typography>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default withRouter(MyStepper)\r\n","import { Paper } from \"@material-ui/core\"\r\nimport { makeStyles } from \"@material-ui/core\"\r\nimport { FC, ReactElement } from \"react\"\r\nimport Clock from \"./clock\"\r\nimport MyStepper from \"./myStepper\"\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    position: \"sticky\",\r\n    zIndex: 10,\r\n    top: 0,\r\n  },\r\n  navbar: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    position: \"sticky\",\r\n    alignItems: \"stretch\",\r\n    top: 0,\r\n    zIndex: 5,\r\n  },\r\n})\r\nconst Header: FC<any> = (): ReactElement => {\r\n  const styles = useStyles()\r\n  return (\r\n    <div>\r\n      <Paper className={styles.navbar}>\r\n        <MyStepper />\r\n        <Clock />\r\n      </Paper>\r\n    </div>\r\n  )\r\n}\r\nexport default Header\r\n","import { ReactElement, FC } from \"react\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { useSelector } from \"react-redux\"\nimport { Paper, ThemeProvider } from \"@material-ui/core\"\nimport { createTheme } from \"@material-ui/core/styles\"\n\nimport { routes } from \"../src/config/routes\"\nimport IRoute from \"./model/IRoute\"\nimport BottomNav from \"./components/bottomNav\"\nimport Header from \"./components/header\"\nimport { RootState } from \"./redux/reducers/rootReducer\"\nconst EmptyComponent: FC<any> = (): ReactElement => {\n  return <div>empty component</div>\n}\n\nfunction App(): ReactElement {\n  const appState = useSelector((state: RootState) => state.report)\n  // const theme = createMuiTheme({})\n  const darkTheme = createTheme({\n    palette: {\n      type: \"dark\",\n    },\n  })\n  const lightTheme = createTheme({\n    palette: {\n      type: \"light\",\n    },\n  })\n  return (\n    <>\n      {/* <Layout> */}\n      <ThemeProvider theme={appState.dark ? darkTheme : lightTheme}>\n        <Paper elevation={14} style={{ height: \"95vh\" }}>\n          <Router>\n            <Header />\n            <Switch>\n              {routes.map((route: IRoute) => (\n                <Route key={`${route.key}`} path={`${route.path}`} component={route.component || EmptyComponent} exact />\n              ))}\n            </Switch>\n            <BottomNav />\n          </Router>\n        </Paper>\n      </ThemeProvider>\n      {/* </Layout> */}\n    </>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}